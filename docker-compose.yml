---
version: '3'

volumes:
  pg-data: {}
  redis-data: {}
  minio-data: {}

services:
  traefik:
    image: traefik:v2.11.0
    container_name: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $PWD/configs/traefik:/etc/traefik:ro
    command:
      - --providers.docker=true
      - --api.insecure=true
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"

  web-ui:
    container_name: web-ui
    image: node:21.6.2-alpine3.19
    depends_on:
      - backend
    working_dir: /var/www/app
    volumes:
      - ./web-ui:/var/www/app
    command: yarn start
    restart: always
    labels:
      - "traefik.http.routers.web-ui.rule=Host(`gpt.localhost`)"
      - traefik.http.services.web-ui.loadbalancer.server.port=3000

  backend:
    container_name: backend
    build:
      context: api
      dockerfile: Dockerfile
    restart: always
    user: ${UID}:${GID}
    working_dir: /var/www/app
    volumes:
      - ./api:/var/www/app
    env_file:
      - .env
    command: python3 -m flask run --host=0.0.0.0
    labels:
      - "traefik.http.routers.backend.rule=Host(`gpt.localhost`) && PathPrefix(`/api`)"
      - "traefik.http.middlewares.testheader.headers.accesscontrolalloworiginlist=http://gpt.localhost/*"
      - "traefik.http.middlewares.testheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE"
      - "traefik.http.middlewares.testheader.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.testheader.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.testheader.headers.addvaryheader=true"
      - traefik.http.services.backend.loadbalancer.server.port=5000

  redis:
    image: redis:7-alpine3.16
    container_name: redis
    hostname: redis
    restart: always
    ports:
      - 6379:6379
    command:
      - redis-server
      - --appendonly
      - "yes"
    volumes:
      - redis-data:/var/lib/redis/data
    environment:
      - ALLOW_EMPTY_PASSWORD=yes

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    restart: always
    links:
      - redis
    depends_on:
      - redis
    environment:
      - REDIS_HOSTS=redis:6379
    labels:
      - "traefik.http.routers.redis-commander.rule=Host(`commander.localhost`)"
      - traefik.http.services.redis-commander.loadbalancer.server.port=8081

  minio:
    image: minio/minio:RELEASE.2022-09-25T15-44-53Z.fips
    container_name: minio
    restart: always
    ports:
      - 9000:9000
      - 9001:9001
    expose:
      - 9000
      - 9001
    volumes:
      - minio-data:/var/lib/minio/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9001" /data
    labels:
      - "traefik.http.routers.minio.rule=Host(`minio.localhost`)"
      - traefik.http.services.minio.loadbalancer.server.port=9000

  grafana:
    image: grafana/grafana:9.2.5-ubuntu
    container_name: grafana
    environment:
      - GF_SERVER_DOMAIN=localhost
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_INSTALL_PLUGINS=marcusolsson-calendar-panel,frser-sqlite-datasource
      - GF_USERS_DEFAULT_THEME=light
      - GF_AUTH_ANONYMOUS_ENABLED=true
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./api/db:/api_db
    labels:
      - "traefik.http.routers.grafana.rule=Host(`grafana.localhost`)"
      - traefik.http.services.grafana.loadbalancer.server.port=3000
