---
name: deploy
on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Deploy environment (Staging/Prod)"
        required: true
        default: staging

jobs:
  deploy:
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_version: 1.8.4

      - name: terraform init
        run: terraform init --upgrade
        working-directory: ./terraform/environments/${{ github.event.inputs.environment }}

      - name: terraform apply
        run: terraform apply -auto-approve
        working-directory: ./terraform/environments/${{ github.event.inputs.environment }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
          DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}

  configure:
    runs-on: ubuntu-latest
    needs: ["deploy"]
    environment: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - uses: webfactory/ssh-agent@v0.8.0
        id: ssh-agent
        with:
          ssh-private-key: ${{ secrets.DO_SSH_KEY }}

      - name: run ansible
        run: |
          pip install ansible docker
          ansible-playbook -i ansible/inventory/${{ github.event.inputs.environment }}.yml -i ansible/inventory/digitalocean.yml ansible/site.yml
        env:
          DO_API_KEY: ${{ secrets.DIGITALOCEAN_TOKEN }}
          DO_DNS_TOKEN: ${{ secrets.DIGITALOCEAN_DNS_TOKEN }}
          TRAEFIK_PASSWORD: ${{ secrets.TRAEFIK_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.PAT }}
          SSH_AUTH_SOCK: ${{ steps.ssh-agent.outputs.SSH_AUTH_SOCK }}
          SSH_AGENT_PID: ${{ steps.ssh-agent.outputs.SSH_AGENT_PID }}
