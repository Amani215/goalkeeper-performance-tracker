---
version: '3'

volumes:
  pg-data: {}
  redis-data: {}
  minio-data: {}
  prometheus-data: {}
  loki-data: {}

services:
  traefik:
    image: traefik:v2.11.0
    container_name: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $PWD/configs/traefik:/etc/traefik:ro
      - $PWD/logs/traefik:/var/log/traefik:rw
    command:
      - --providers.docker=true
      - --api.insecure=true
      - --metrics=true
      - --metrics.prometheus=true
      - --metrics.prometheus.addEntryPointsLabels=true
      - --metrics.prometheus.addrouterslabels=true
      - --log.filePath=/var/log/traefik/traefik.log
      - --log.format=json
      - --log.level=INFO
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"

  web-ui:
    container_name: web-ui
    image: node:21.6.2-alpine3.19
    depends_on:
      - backend
    working_dir: /var/www/app
    volumes:
      - ./web-ui:/var/www/app
    command: yarn start
    restart: always
    labels:
      - "traefik.http.routers.web-ui.rule=Host(`gpt.localhost`)"
      - traefik.http.services.web-ui.loadbalancer.server.port=3000

  backend:
    container_name: backend
    build:
      context: api
      dockerfile: Dockerfile
    restart: always
    user: ${UID}:${GID}
    working_dir: /var/www/app
    volumes:
      - ./api:/var/www/app
    env_file:
      - .env
    command: python3 -m flask run --host=0.0.0.0
    labels:
      - traefik.http.routers.backend.rule=Host(`gpt.localhost`) && PathPrefix(`/api`)
      - traefik.http.middlewares.testheader.headers. accesscontrolalloworiginlist=http://gpt.localhost/*
      - traefik.http.middlewares.testheader.headers. accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE
      - traefik.http.middlewares.testheader.headers.accesscontrolallowheaders=*
      - traefik.http.middlewares.testheader.headers.accesscontrolmaxage=100
      - traefik.http.middlewares.testheader.headers.addvaryheader=true
      - traefik.http.services.backend.loadbalancer.server.port=5000

  redis:
    image: redis/redis-stack:7.2.0-v10
    container_name: redis
    hostname: redis
    restart: always
    ports:
      - 6379:6379
    expose:
      - '8001'
    volumes:
      - redis-data:/data
    labels:
      - "traefik.http.routers.redis.rule=Host(`redis.localhost`)"
      - traefik.http.services.redis.loadbalancer.server.port=8001

  redis-exporter:
    image: bitnami/redis-exporter:1.58.0
    container_name: redis-exporter
    restart: always
    environment:
      - REDIS_ADDR=redis://redis:6379

  minio:
    image: minio/minio:RELEASE.2024-04-18T19-09-19Z.fips
    container_name: minio
    restart: always
    ports:
      - 9000:9000
      - 9001:9001
    expose:
      - 9000
      - 9001
    volumes:
      - minio-data:/var/lib/minio/data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_LOGGER_WEBHOOK_ENABLE_FLUENTBIT=on
      - MINIO_LOGGER_WEBHOOK_ENDPOINT_FLUENTBIT=fluentbit:8888
    command: server --console-address ":9001" /data
    labels:
      - "traefik.http.routers.minio.rule=Host(`minio.localhost`)"
      - traefik.http.services.minio.loadbalancer.server.port=9000

  grafana:
    image: grafana/grafana:9.2.5-ubuntu
    container_name: grafana
    environment:
      - GF_SERVER_DOMAIN=localhost
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_INSTALL_PLUGINS=marcusolsson-calendar-panel,frser-sqlite-datasource
      - GF_USERS_DEFAULT_THEME=light
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_SECURITY_ALLOW_EMBEDDING=true
    volumes:
      - $PWD/configs/grafana/provisioning:/etc/grafana/provisioning
      - ./api/db:/api_db
    labels:
      - "traefik.http.routers.grafana.rule=Host(`grafana.localhost`)"
      - traefik.http.services.grafana.loadbalancer.server.port=3000
      - "traefik.http.middlewares.testheader.headers.accesscontrolalloworiginlist=http://gpt.localhost/*"

  prometheus:
    image: prom/prometheus:v2.51.2
    container_name: prometheus
    restart: always
    volumes:
      - $PWD/configs/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    labels:
      - traefik.http.routers.prometheus.rule=Host(`prometheus.localhost`)
      - traefik.http.services.prometheus.loadbalancer.server.port=9090

  loki:
    image: grafana/loki:2.9.7
    volumes:
      - loki-data:/loki
      - $PWD/configs/loki:/etc/loki:ro
    expose:
      - 3100
    labels:
      - "traefik.http.routers.loki.rule=Host(`loki.localhost`)"
    command: -config.file=/etc/loki/local-config.yaml

  fluentbit:
    image: grafana/fluent-bit-plugin-loki:3.0.0
    container_name: fluentbit
    volumes:
      - $PWD/configs/fluentbit:/fluent-bit/etc:ro
      - $PWD/logs:/var/log/logs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
